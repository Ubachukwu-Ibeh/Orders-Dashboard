[{"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\index.tsx":"1","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\reportWebVitals.ts":"2","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\App.tsx":"3","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\Orders\\Orders.tsx":"4","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\stores\\SelectedProducts_store.ts":"5","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\reducers\\Orders_reducer.ts":"6","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\ProductTable\\ProductTable.tsx":"7","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\Item\\Item.tsx":"8","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\utils\\localStorage.ts":"9","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\utils\\productGenerator.ts":"10","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\actions\\Orders_actions.ts":"11","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\Product\\Product.tsx":"12"},{"size":450,"mtime":1612272916560,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":370,"mtime":1613731540665,"results":"16","hashOfConfig":"14"},{"size":1766,"mtime":1613819277348,"results":"17","hashOfConfig":"14"},{"size":188,"mtime":1613647945913,"results":"18","hashOfConfig":"14"},{"size":1417,"mtime":1613689419843,"results":"19","hashOfConfig":"14"},{"size":2042,"mtime":1613691192128,"results":"20","hashOfConfig":"14"},{"size":2974,"mtime":1613824179839,"results":"21","hashOfConfig":"14"},{"size":233,"mtime":1613686317682,"results":"22","hashOfConfig":"14"},{"size":1562,"mtime":1613731150415,"results":"23","hashOfConfig":"14"},{"size":200,"mtime":1613648151368,"results":"24","hashOfConfig":"14"},{"size":1421,"mtime":1613820670098,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ixxhgz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\index.tsx",[],["55","56"],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\reportWebVitals.ts",[],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\App.tsx",["57"],"import React from \"react\";\nimport ProductTable from \"./pages/OrdersPage/components/ProductTable/ProductTable\";\nimport Orders from \"./pages/OrdersPage/components/Orders/Orders\";\nimport Styles from \"./App.module.scss\";\n\nconst App = () => {\n  return (\n    <div className={Styles.main}>\n      <Orders />\n      {/* <ProductTable /> */}\n    </div>\n  );\n};\nexport default App;\n","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\Orders\\Orders.tsx",["58","59"],"import React, { useState, useReducer, useContext } from \"react\";\r\nimport Styles from \"./style/Orders.module.scss\";\r\nimport { selectedProducts } from \"../../../../stores/SelectedProducts_store\";\r\nimport ProductTable from \"../ProductTable/ProductTable\";\r\nimport orderReducer from \"../../../../reducers/Orders_reducer\";\r\nimport Item from \"../Item/Item\";\r\nimport Product from \"../Product/Product\";\r\nimport { getItem } from \"../../../../utils/localStorage\";\r\n\r\nexport const OrdersContext = React.createContext(selectedProducts);\r\n\r\nconst Order = () => {\r\n  let [isOpen, setIsOpen] = useState(false);\r\n  let [state, dispatch] = useReducer(orderReducer, selectedProducts);\r\n  const ordersContext = useContext(OrdersContext);\r\n  const props = {\r\n    setIsOpen: setIsOpen\r\n  };\r\n  const openOrdersList = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  return (\r\n    <div className={Styles.main}>\r\n      <div>\r\n        <button onClick={() => openOrdersList()}>+ New order</button>\r\n      </div>\r\n      <table cellSpacing=\"0\" cellPadding=\"0\" className={Styles.itemTable}>\r\n        <tbody>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Order id</th>\r\n            <th>Created</th>\r\n            <th>Customer</th>\r\n            <th>Total</th>\r\n            <th>Profit</th>\r\n            <th>Status</th>\r\n          </tr>\r\n          {Object.keys(ordersContext.selectedProducts).map((item, index) => {\r\n            const props = {\r\n              id: index\r\n            };\r\n            return <Item key={index} {...props} />;\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <OrdersContext.Provider value={{ ...state, dispatch: dispatch }}>\r\n        {isOpen ? <ProductTable {...props} /> : <></>}\r\n      </OrdersContext.Provider>\r\n    </div>\r\n  );\r\n};\r\nexport default Order;\r\n","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\stores\\SelectedProducts_store.ts",[],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\reducers\\Orders_reducer.ts",[],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\ProductTable\\ProductTable.tsx",[],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\Item\\Item.tsx",["60"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Styles from \"./style/Item.module.scss\";\r\nimport { IItemProps, IItemDisplay } from \"../../../../interfaces/interfaces\";\r\nimport { getRandom } from \"../../../../utils/productGenerator\";\r\nimport { OrdersContext } from \"../Orders/Orders\";\r\nimport Product from \"../Product/Product\";\r\n\r\nconst Item = (props: IItemProps) => {\r\n  const { id } = props;\r\n  const [itemData, setItemData] = useState<IItemDisplay>({});\r\n  const ordersContext = useContext(OrdersContext);\r\n  const itemObject = ordersContext.selectedProducts[`item${id}`];\r\n  const { order_id, time, rating, total, profit } = itemData;\r\n  const [childerAreOpen, setChildrenAreOpen] = useState(false);\r\n\r\n  const openChildren = () => {\r\n    setChildrenAreOpen(!childerAreOpen);\r\n  };\r\n  useEffect(() => {\r\n    const data = {\r\n      order_id: getRandom(1000, 30000),\r\n      time: getRandom(0, 10),\r\n      rating: [getRandom(1, 5), getRandom(0, 10)],\r\n      total: `$${Object.keys(itemObject).reduce((prev, product) => {\r\n        const priceText = itemObject[product].price;\r\n        return (Number(priceText.slice(-(priceText.length - 1))) + Number(prev))\r\n          .toFixed(2)\r\n          .toString();\r\n      }, \"0\")}`,\r\n      profit: `$${getRandom(50, 500)}`\r\n    };\r\n    setItemData({ ...data });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <tr className={Styles.main} onClick={() => openChildren()}>\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"\"\r\n            id=\"\"\r\n            onClick={e => e.stopPropagation()}\r\n          />\r\n        </td>\r\n        <td>{order_id}</td>\r\n        <td>{time} min ago</td>\r\n        <td>{rating && `${rating[0]}.${rating[1]}`}</td>\r\n        <td>{total}</td>\r\n        <td>{profit}</td>\r\n        <td>\r\n          <div className={Styles.status}>\r\n            <p>\r\n              unknown <span></span>\r\n            </p>\r\n          </div>\r\n        </td>\r\n        <td>\r\n          <button onClick={e => e.stopPropagation()}>...</button>\r\n        </td>\r\n      </tr>\r\n      {childerAreOpen ? (\r\n        <tr>\r\n          <td></td>\r\n          <td colSpan={6}>\r\n            <table\r\n              cellPadding=\"0\"\r\n              cellSpacing=\"0\"\r\n              className={Styles.productsTable}>\r\n              <tbody>\r\n                <tr className={Styles.productsHeader}>\r\n                  <th>#</th>\r\n                  <th>SKU</th>\r\n                  <th>Name</th>\r\n\r\n                  <th>Price</th>\r\n                  <th>Qty</th>\r\n                  <th>Disc</th>\r\n                  <th>Total</th>\r\n                </tr>\r\n                {Object.keys(itemObject).map((product, index) => {\r\n                  return (\r\n                    <Product key={`prod${index}`} {...itemObject[product]} />\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Item;\r\n","C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\utils\\localStorage.ts",[],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\utils\\productGenerator.ts",[],["61","62"],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\actions\\Orders_actions.ts",[],"C:\\Users\\Brian\\Desktop\\My Stuff\\OrdersDashboard\\src\\pages\\OrdersPage\\components\\Product\\Product.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":20},{"ruleId":"67","severity":1,"message":"71","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":15},{"ruleId":"67","severity":1,"message":"72","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":33,"column":6,"nodeType":"75","endLine":33,"endColumn":8,"suggestions":"76"},{"ruleId":"63","replacedBy":"77"},{"ruleId":"65","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'ProductTable' is defined but never used.","Identifier","unusedVar","'Product' is defined but never used.","'getItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'itemObject'. Either include it or remove the dependency array.","ArrayExpression",["81"],["79"],["80"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [itemObject]",{"range":"84","text":"85"},[1329,1331],"[itemObject]"]